%%% -------------------------------------------------------------------
%%% Author  : Joq Erlang
%%% Description : test application calc
%%%  
%%% Created : 10 dec 2012
%%% -------------------------------------------------------------------
-module(client).

%% --------------------------------------------------------------------
%% Include files
%% --------------------------------------------------------------------
%-include("interfacesrc/brd_local.hrl").

%% --------------------------------------------------------------------
 
%% --------------------------------------------------------------------
%% Key Data structures
%% 
%% --------------------------------------------------------------------
-record(state,{}).

%% --------------------------------------------------------------------

%% ====================================================================
%% External functions
%% ====================================================================


-export([start/1
	 ]).




%% ====================================================================
%% External functions
%% ====================================================================


%%-----------------------------------------------------------------------


%% ====================================================================
%% Server functions
%% ====================================================================

%% --------------------------------------------------------------------
%% Function: init/1
%% Description: Initiates the server
%% Returns: {ok, State}          |
%%          {ok, State, Timeout} |
%%          ignore               |
%%          {stop, Reason}
%
%% --------------------------------------------------------------------
start([])->
    {ok,State}=init([]),
    Pid=spawn(fun()->loop(State) end ),
    Ref=erlang:monitor(process,Pid),
    {Pid,Ref}.

init([])->
    {ok,#state{}}.
%% --------------------------------------------------------------------
%%% Internal functions
%% --------------------------------------------------------------------

%% --------------------------------------------------------------------
%% Internal functions
%% --------------------------------------------------------------------
loop(State)->    
    receive
	{From,{MsgId,Type,F,A}}->
	    Reply=apply(adder_lib,F,A),
	    io:format("~p~n",[{?MODULE,?LINE,{From,{MsgId,Type,F,A}}}]),
	    case Type of
		reply->
		    From!{self(),{MsgId,Reply}};
		noreply ->
		    ok
	    end,
	    NewState=State,
	    loop(NewState);
	{From,stop} ->
	    From!{self(),stopped_normal}
    end.
    
%% --------------------------------------------------------------------
%% Function: 
%% Description:
%% Returns: non
%% --------------------------------------------------------------------

%% --------------------------------------------------------------------
%% Function: 
%% Description:
%% Returns: non
%% --------------------------------------------------------------------

